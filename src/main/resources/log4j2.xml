<?xml version="1.0" encoding="UTF-8"?>
<!--status:这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数，最小是5s。-->
<!--configuration 下有两个节点 Appenders 和 Loggers-->
<configuration status="off" monitorInterval="3600">

    <properties>
        <property name="LOG_HOME">root/output/blog/</property>
    </properties>
    <!--appenders下常用的子节点有 Console、RollingFile、File -->
    <appenders>
        <!--控制台输出(注①)-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <!--关于日志level(注②) 共有8个级别，按照从低到高为：All < Trace < Debug < Info < Warn < Error < Fatal < OFF-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--日志打印格式-->
            <PatternLayout pattern="%d{yyyy.MM.dd HH:mm:ss.SSS} [%thread] %level [%C{36}.%M:%L] - %msg%xEx%n" />
        </Console>

        <!--滚动文件日志(注③)-->
        <RollingFile
                name="run_log"
                fileName="logs/y14.log"
                filePattern="logs/y14.log.%d{yyyy-MM-dd-HH}.log">
            <PatternLayout pattern="%d{yyyy.MM.dd HH:mm:ss.SSS} [%thread] %level [%C{36}.%M:%L] - %msg%xEx%n" />
            <ThresholdFilter level="Info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--指定滚动日志的策略，就是什么时候进行新建日志文件输出日志 -->
            <Policies>
                <!-- 基于时间的滚动策略(注④)-->
                <TimeBasedTriggeringPolicy interval="4" modulate="true"/>
                <!--用来指定同一个文件夹下最多有几个日志文件时开始删除最旧的，创建新的(通过max属性)。-->
                <DefaultRolloverStrategy max="50"/>
            </Policies>
        </RollingFile>

    </appenders>

    <!--Loggers节点，常见的有两种:Root和Logger-->
    <Loggers>
        <!-- root 用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出-->
        <root level="all">
            <appender-ref ref="run_log"/>
            <appender-ref ref="Console"/>
        </root>
        <!--　Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。 -->
    </Loggers>

</configuration>

        <!--注①
        Console 控制台输出
        name:指定Appender的名字.
        target:SYSTEM_OUT 或 SYSTEM_ERR,一般只设置默认:SYSTEM_OUT
        PatternLayout:输出格式，不设置默认为:%m%n.
        -->
        <!-- 注②
        All:最低等级的，用于打开所有日志记录.
　　　　　Trace:是追踪，就是程序推进以下，你就可以写个trace输出，所以trace应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出.
　　　　　Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.
　　　　　Info:消息在粗粒度级别上突出强调应用程序的运行过程.
　　　　　Warn:输出警告及warn以下级别的日志.
　　　　　Error:输出错误信息日志.
　　　　　Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.
　　　　　OFF:最高等级的，用于关闭所有日志记录.
        -->
        <!-- 注③
        name:指定Appender的名字.
　　　　　fileName:指定输出日志的目的文件带全路径的文件名.
　　　　　PatternLayout:输出格式，不设置默认为:%m%n.
　　　　　filePattern:指定新建日志文件的名称格式.
        -->
        <!--注④
        interval属性用来指定多久滚动一次，默认是1 hour。
        modulate=true用来调整时间：比如现在是早上3am，interval是4，那么第一次滚动是在4am，接着是8am，12am...而不是7am.
        -->